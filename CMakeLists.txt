cmake_minimum_required(VERSION 3.15)

project(cpp_except_perf)

add_executable(cpp_except_perf main.cpp)

target_compile_features(cpp_except_perf PRIVATE cxx_std_20)

set(CMAKE_CONFIGURATION_TYPES 00_NoExcept 01_FullExcept 02_ThrowExcept 03_CatchExcept)

set(CMAKE_CXX_FLAGS_00_NOEXCEPT ${CMAKE_CXX_FLAGS_RELEASE})
set(CMAKE_EXE_LINKER_FLAGS_00_NOEXCEPT ${CMAKE_EXE_LINKER_FLAGS_RELEASE})

set(CMAKE_CXX_FLAGS_01_FULLEXCEPT ${CMAKE_CXX_FLAGS_RELEASE})
set(CMAKE_EXE_LINKER_FLAGS_01_FULLEXCEPT ${CMAKE_EXE_LINKER_FLAGS_RELEASE})

set(CMAKE_CXX_FLAGS_02_THROWEXCEPT ${CMAKE_CXX_FLAGS_RELEASE})
set(CMAKE_EXE_LINKER_FLAGS_02_THROWEXCEPT ${CMAKE_EXE_LINKER_FLAGS_RELEASE})

set(CMAKE_CXX_FLAGS_03_CATCHEXCEPT ${CMAKE_CXX_FLAGS_RELEASE})
set(CMAKE_EXE_LINKER_FLAGS_03_CATCHEXCEPT ${CMAKE_EXE_LINKER_FLAGS_RELEASE})

if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    message(STATUS "Using MSVC frontend variant")
    string(REPLACE "/EHsc" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
    set(CMAKE_CXX_COMPILE_OBJECT "${CMAKE_CXX_COMPILE_OBJECT} /Fa<OBJECT>.asm")
    set(CMAKE_CXX_FLAGS_00_NOEXCEPT "${CMAKE_CXX_FLAGS_00_NOEXCEPT} /EHs-c-")
    set(CMAKE_CXX_FLAGS_01_FULLEXCEPT "${CMAKE_CXX_FLAGS_01_FULLEXCEPT} /EHsc")
    set(CMAKE_CXX_FLAGS_02_THROWEXCEPT "${CMAKE_CXX_FLAGS_02_THROWEXCEPT} /EHsc")
    set(CMAKE_CXX_FLAGS_03_CATCHEXCEPT "${CMAKE_CXX_FLAGS_03_CATCHEXCEPT} /EHsc")
else()
    message(STATUS "Using GNU/Clang frontend variant")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --save-temps=obj")
    set(CMAKE_CXX_FLAGS_00_NOEXCEPT "${CMAKE_CXX_FLAGS_00_NOEXCEPT} -fno-exceptions")
endif()

target_compile_definitions(cpp_except_perf PRIVATE
    _HAS_EXCEPTIONS=$<CONFIG:01_FullExcept,02_ThrowExcept,03_CatchExcept>
    THROW_EXCEPTIONS=$<CONFIG:01_FullExcept,02_ThrowExcept>
    CATCH_EXCEPTIONS=$<CONFIG:01_FullExcept,03_CatchExcept>
)
